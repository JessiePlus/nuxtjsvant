webpackJsonp([2],{"2dm0":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=t("whYm"),r=t("vfN+"),s=t("VU/8")(i.a,r.a,!1,null,null,null);s.options.__file="pages\\demo\\list.vue",n.default=s.exports},"vfN+":function(e,n,t){"use strict";var i=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("van-nav-bar",{attrs:{title:"标题","left-text":"返回","right-text":"按钮","left-arrow":""},on:{"click-left":function(n){e.$router.back()}}}),t("van-pull-refresh",{on:{refresh:e.onRefresh},model:{value:e.refreshing,callback:function(n){e.refreshing=n},expression:"refreshing"}},[t("van-list",{attrs:{finished:e.finished},on:{load:e.onLoad},model:{value:e.loading,callback:function(n){e.loading=n},expression:"loading"}},e._l(e.list,function(e){return t("van-cell",{key:e,attrs:{title:e+""}})}))],1)],1)};i._withStripped=!0;var r={render:i,staticRenderFns:[]};n.a=r},whYm:function(e,n,t){"use strict";n.a={data:function(){return{list:[],refreshing:!1,loading:!1,finished:!1}},methods:{onLoad:function(){var e=this;setTimeout(function(){for(var n=0;n<10;n++){var t=e.list.length+1;e.list.push(t<10?"0"+t:t)}e.loading=!1,e.list.length>=40&&(e.finished=!0)},500)},onRefresh:function(){var e=this;setTimeout(function(){e.list=[],e.finished=!1,e.refreshing=!1,window.scrollTo(0,10)},1e3)}}}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxjb2RlXFxOb2RlLmpzXFxNb2JsaWVcXG51eHRqc3ZhbnRcXHBhZ2VzXFxkZW1vXFxsaXN0LnZ1ZSIsIndlYnBhY2s6Ly8vLi9wYWdlcy9kZW1vL2xpc3QudnVlPzU3OGMiLCJwYWdlc1xcZGVtby9saXN0LnZ1ZSJdLCJuYW1lcyI6WyJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX25vZGVfbW9kdWxlc192dWVfbG9hZGVyX2xpYl90ZW1wbGF0ZV9jb21waWxlcl9pbmRleF9pZF9kYXRhX3ZfNmJiN2NjNDFfaGFzU2NvcGVkX2ZhbHNlX3RyYW5zZm9ybVRvUmVxdWlyZV92aWRlb19zcmNfc291cmNlX3NyY19vYmplY3Rfc3JjX2VtYmVkX3NyY19wcmVzZXJ2ZVdoaXRlc3BhY2VfZmFsc2VfYnVibGVfdHJhbnNmb3Jtc19ub2RlX21vZHVsZXNfdnVlX2xvYWRlcl9saWJfc2VsZWN0b3JfdHlwZV90ZW1wbGF0ZV9pbmRleF8wX2xpc3RfdnVlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiQ29tcG9uZW50Iiwibm9ybWFsaXplQ29tcG9uZW50IiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19iYWJlbF9sb2FkZXJfYmFiZWxyY19mYWxzZV9jYWNoZURpcmVjdG9yeV9mYWxzZV9wcmVzZXRzX0RfY29kZV9Ob2RlX2pzX01vYmxpZV9udXh0anN2YW50X25vZGVfbW9kdWxlc19iYWJlbF9wcmVzZXRfdnVlX2FwcF9kaXN0X2luZGV4X2NvbW1vbl9qc190YXJnZXRzX2llXzlfdWdsaWZ5X3RydWVfbm9kZV9tb2R1bGVzX3Z1ZV9sb2FkZXJfbGliX3NlbGVjdG9yX3R5cGVfc2NyaXB0X2luZGV4XzBfbGlzdF92dWVfXyIsIm9wdGlvbnMiLCJfX2ZpbGUiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwicmVuZGVyIiwiX3ZtIiwidGhpcyIsIl9oIiwiJGNyZWF0ZUVsZW1lbnQiLCJfYyIsIl9zZWxmIiwiYXR0cnMiLCJ0aXRsZSIsImxlZnQtdGV4dCIsInJpZ2h0LXRleHQiLCJsZWZ0LWFycm93Iiwib24iLCJjbGljay1sZWZ0IiwiJGV2ZW50IiwiJHJvdXRlciIsImJhY2siLCJyZWZyZXNoIiwib25SZWZyZXNoIiwibW9kZWwiLCJ2YWx1ZSIsInJlZnJlc2hpbmciLCJjYWxsYmFjayIsIiQkdiIsImV4cHJlc3Npb24iLCJmaW5pc2hlZCIsImxvYWQiLCJvbkxvYWQiLCJsb2FkaW5nIiwiX2wiLCJsaXN0IiwiaXRlbSIsImtleSIsIl93aXRoU3RyaXBwZWQiLCJlc0V4cG9ydHMiLCJzdGF0aWNSZW5kZXJGbnMiLCJfdGhpcyIsInRleHQiLCJfdGhpczIiXSwibWFwcGluZ3MiOiJ1SEFBQUEsRUFBQUMsRUFBQSxRQWVBQyxFQWRBRCxFQUFBLE9BY0FFLENBQ0FDLEVBQUEsRUFDQUosRUFBQSxHQVRBLEVBRUEsS0FFQSxLQUVBLE1BU0FFLEVBQUFHLFFBQUFDLE9BQUEsd0JBa0JBQyxFQUFBLFFBQUFMLEVBQUEsNkNDekNBLElBQUFNLEVBQUEsV0FDQSxJQUFBQyxFQUFBQyxLQUNBQyxFQUFBRixFQUFBRyxlQUNBQyxFQUFBSixFQUFBSyxNQUFBRCxJQUFBRixFQUNBLE9BQUFFLEVBQ0EsT0FFQUEsRUFBQSxlQUNBRSxPQUNBQyxNQUFBLEtBQ0FDLFlBQUEsS0FDQUMsYUFBQSxLQUNBQyxhQUFBLElBRUFDLElBQ0FDLGFBQUEsU0FBQUMsR0FDQWIsRUFBQWMsUUFBQUMsV0FJQVgsRUFDQSxvQkFFQU8sSUFBZUssUUFBQWhCLEVBQUFpQixXQUNmQyxPQUNBQyxNQUFBbkIsRUFBQW9CLFdBQ0FDLFNBQUEsU0FBQUMsR0FDQXRCLEVBQUFvQixXQUFBRSxHQUVBQyxXQUFBLGdCQUlBbkIsRUFDQSxZQUVBRSxPQUFzQmtCLFNBQUF4QixFQUFBd0IsVUFDdEJiLElBQW1CYyxLQUFBekIsRUFBQTBCLFFBQ25CUixPQUNBQyxNQUFBbkIsRUFBQTJCLFFBQ0FOLFNBQUEsU0FBQUMsR0FDQXRCLEVBQUEyQixRQUFBTCxHQUVBQyxXQUFBLFlBR0F2QixFQUFBNEIsR0FBQTVCLEVBQUE2QixLQUFBLFNBQUFDLEdBQ0EsT0FBQTFCLEVBQUEsWUFBcUMyQixJQUFBRCxFQUFBeEIsT0FBb0JDLE1BQUF1QixFQUFBLFVBSXpELElBR0EsSUFJQS9CLEVBQUFpQyxlQUFBLEVBQ0EsSUFBQUMsR0FBaUJsQyxTQUFBbUMsb0JBQ2pCcEMsRUFBQSx1Q0NsREFBLEVBQUEsOENBSUEsV0FDQSxZQUVBLCtCQUVBLElBQUFxQyxFQUFBbEMsZ0RBRUEscUJBQ0EseUJBQ0FtQyxjQUdBLGtDQUVBLElBRUEsMkJBRUEsSUFBQUMsRUFBQXBDLGlEQUdBLGdCQUNBLG9CQUNBLEtBQ0EiLCJmaWxlIjoicGFnZXNfZGVtb19saXN0LjkzYTgwMjQ0ODYxZTAxMTZlMTVjLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRpc3Bvc2VkID0gZmFsc2VcbnZhciBub3JtYWxpemVDb21wb25lbnQgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplclwiKVxuLyogc2NyaXB0ICovXG5leHBvcnQgKiBmcm9tIFwiISFiYWJlbC1sb2FkZXI/e1xcXCJiYWJlbHJjXFxcIjpmYWxzZSxcXFwiY2FjaGVEaXJlY3RvcnlcXFwiOmZhbHNlLFxcXCJwcmVzZXRzXFxcIjpbW1xcXCJEOlxcXFxcXFxcY29kZVxcXFxcXFxcTm9kZS5qc1xcXFxcXFxcTW9ibGllXFxcXFxcXFxudXh0anN2YW50XFxcXFxcXFxub2RlX21vZHVsZXNcXFxcXFxcXGJhYmVsLXByZXNldC12dWUtYXBwXFxcXFxcXFxkaXN0XFxcXFxcXFxpbmRleC5jb21tb24uanNcXFwiLHtcXFwidGFyZ2V0c1xcXCI6e1xcXCJpZVxcXCI6OSxcXFwidWdsaWZ5XFxcIjp0cnVlfX1dXX0hLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9saXN0LnZ1ZVwiXG5pbXBvcnQgX192dWVfc2NyaXB0X18gZnJvbSBcIiEhYmFiZWwtbG9hZGVyP3tcXFwiYmFiZWxyY1xcXCI6ZmFsc2UsXFxcImNhY2hlRGlyZWN0b3J5XFxcIjpmYWxzZSxcXFwicHJlc2V0c1xcXCI6W1tcXFwiRDpcXFxcXFxcXGNvZGVcXFxcXFxcXE5vZGUuanNcXFxcXFxcXE1vYmxpZVxcXFxcXFxcbnV4dGpzdmFudFxcXFxcXFxcbm9kZV9tb2R1bGVzXFxcXFxcXFxiYWJlbC1wcmVzZXQtdnVlLWFwcFxcXFxcXFxcZGlzdFxcXFxcXFxcaW5kZXguY29tbW9uLmpzXFxcIix7XFxcInRhcmdldHNcXFwiOntcXFwiaWVcXFwiOjksXFxcInVnbGlmeVxcXCI6dHJ1ZX19XV19IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXNjcmlwdCZpbmRleD0wIS4vbGlzdC52dWVcIlxuLyogdGVtcGxhdGUgKi9cbmltcG9ydCBfX3Z1ZV90ZW1wbGF0ZV9fIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTZiYjdjYzQxXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwidHJhbnNmb3JtVG9SZXF1aXJlXFxcIjp7XFxcInZpZGVvXFxcIjpcXFwic3JjXFxcIixcXFwic291cmNlXFxcIjpcXFwic3JjXFxcIixcXFwib2JqZWN0XFxcIjpcXFwic3JjXFxcIixcXFwiZW1iZWRcXFwiOlxcXCJzcmNcXFwifSxcXFwicHJlc2VydmVXaGl0ZXNwYWNlXFxcIjpmYWxzZSxcXFwiYnVibGVcXFwiOntcXFwidHJhbnNmb3Jtc1xcXCI6e319fSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vbGlzdC52dWVcIlxuLyogdGVtcGxhdGUgZnVuY3Rpb25hbCAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyA9IGZhbHNlXG4vKiBzdHlsZXMgKi9cbnZhciBfX3Z1ZV9zdHlsZXNfXyA9IG51bGxcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBudWxsXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxudmFyIENvbXBvbmVudCA9IG5vcm1hbGl6ZUNvbXBvbmVudChcbiAgX192dWVfc2NyaXB0X18sXG4gIF9fdnVlX3RlbXBsYXRlX18sXG4gIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyxcbiAgX192dWVfc3R5bGVzX18sXG4gIF9fdnVlX3Njb3BlSWRfXyxcbiAgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfX1xuKVxuQ29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWdlc1xcXFxkZW1vXFxcXGxpc3QudnVlXCJcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkge1xuICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCBmYWxzZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTZiYjdjYzQxXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtNmJiN2NjNDFcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH1cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGlzcG9zZWQgPSB0cnVlXG4gIH0pXG59KSgpfVxuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQuZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9wYWdlcy9kZW1vL2xpc3QudnVlXG4vLyBtb2R1bGUgaWQgPSAyZG0wXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJkaXZcIixcbiAgICBbXG4gICAgICBfYyhcInZhbi1uYXYtYmFyXCIsIHtcbiAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICB0aXRsZTogXCLmoIfpophcIixcbiAgICAgICAgICBcImxlZnQtdGV4dFwiOiBcIui/lOWbnlwiLFxuICAgICAgICAgIFwicmlnaHQtdGV4dFwiOiBcIuaMiemSrlwiLFxuICAgICAgICAgIFwibGVmdC1hcnJvd1wiOiBcIlwiXG4gICAgICAgIH0sXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgXCJjbGljay1sZWZ0XCI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgX3ZtLiRyb3V0ZXIuYmFjaygpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIF9jKFxuICAgICAgICBcInZhbi1wdWxsLXJlZnJlc2hcIixcbiAgICAgICAge1xuICAgICAgICAgIG9uOiB7IHJlZnJlc2g6IF92bS5vblJlZnJlc2ggfSxcbiAgICAgICAgICBtb2RlbDoge1xuICAgICAgICAgICAgdmFsdWU6IF92bS5yZWZyZXNoaW5nLFxuICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikge1xuICAgICAgICAgICAgICBfdm0ucmVmcmVzaGluZyA9ICQkdlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4cHJlc3Npb246IFwicmVmcmVzaGluZ1wiXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcInZhbi1saXN0XCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGF0dHJzOiB7IGZpbmlzaGVkOiBfdm0uZmluaXNoZWQgfSxcbiAgICAgICAgICAgICAgb246IHsgbG9hZDogX3ZtLm9uTG9hZCB9LFxuICAgICAgICAgICAgICBtb2RlbDoge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ubG9hZGluZyxcbiAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7XG4gICAgICAgICAgICAgICAgICBfdm0ubG9hZGluZyA9ICQkdlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJsb2FkaW5nXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF92bS5fbChfdm0ubGlzdCwgZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgICByZXR1cm4gX2MoXCJ2YW4tY2VsbFwiLCB7IGtleTogaXRlbSwgYXR0cnM6IHsgdGl0bGU6IGl0ZW0gKyBcIlwiIH0gfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgKVxuICAgICAgICBdLFxuICAgICAgICAxXG4gICAgICApXG4gICAgXSxcbiAgICAxXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG52YXIgZXNFeHBvcnRzID0geyByZW5kZXI6IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnMgfVxuZXhwb3J0IGRlZmF1bHQgZXNFeHBvcnRzXG5pZiAobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmIChtb2R1bGUuaG90LmRhdGEpIHtcbiAgICByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpICAgICAgLnJlcmVuZGVyKFwiZGF0YS12LTZiYjdjYzQxXCIsIGVzRXhwb3J0cylcbiAgfVxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3RlbXBsYXRlLWNvbXBpbGVyP3tcImlkXCI6XCJkYXRhLXYtNmJiN2NjNDFcIixcImhhc1Njb3BlZFwiOmZhbHNlLFwidHJhbnNmb3JtVG9SZXF1aXJlXCI6e1widmlkZW9cIjpcInNyY1wiLFwic291cmNlXCI6XCJzcmNcIixcIm9iamVjdFwiOlwic3JjXCIsXCJlbWJlZFwiOlwic3JjXCJ9LFwicHJlc2VydmVXaGl0ZXNwYWNlXCI6ZmFsc2UsXCJidWJsZVwiOntcInRyYW5zZm9ybXNcIjp7fX19IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL3BhZ2VzL2RlbW8vbGlzdC52dWVcbi8vIG1vZHVsZSBpZCA9IHZmTitcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiPHRlbXBsYXRlPlxyXG4gICAgPGRpdj5cclxuICAgICAgICA8dmFuLW5hdi1iYXIgdGl0bGU9XCLmoIfpophcIiBsZWZ0LXRleHQ9XCLov5Tlm55cIiByaWdodC10ZXh0PVwi5oyJ6ZKuXCIgbGVmdC1hcnJvdyBAY2xpY2stbGVmdD1cIiRyb3V0ZXIuYmFjaygpXCIvPlxyXG4gICAgICAgIDx2YW4tcHVsbC1yZWZyZXNoIHYtbW9kZWw9XCJyZWZyZXNoaW5nXCIgQHJlZnJlc2g9XCJvblJlZnJlc2hcIj5cclxuICAgICAgICAgICAgPHZhbi1saXN0IHYtbW9kZWw9XCJsb2FkaW5nXCIgOmZpbmlzaGVkPVwiZmluaXNoZWRcIiAgQGxvYWQ9XCJvbkxvYWRcIj5cclxuICAgICAgICAgICAgICAgIDx2YW4tY2VsbCB2LWZvcj1cIml0ZW0gaW4gbGlzdFwiIDprZXk9XCJpdGVtXCIgOnRpdGxlPVwiaXRlbSArICcnXCIgLz5cclxuICAgICAgICAgICAgPC92YW4tbGlzdD5cclxuICAgICAgICA8L3Zhbi1wdWxsLXJlZnJlc2g+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICBkYXRhOigpPT4oe1xyXG4gICAgICBsaXN0OiBbXSxcclxuICAgICAgcmVmcmVzaGluZzogZmFsc2UsXHJcbiAgICAgIGxvYWRpbmc6IGZhbHNlLFxyXG4gICAgICBmaW5pc2hlZDogZmFsc2VcclxuICB9KSxcclxuICBtZXRob2RzOiB7XHJcbiAgICBvbkxvYWQoKSB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gICAgICAgICAgY29uc3QgdGV4dCA9IHRoaXMubGlzdC5sZW5ndGggKyAxO1xyXG4gICAgICAgICAgdGhpcy5saXN0LnB1c2godGV4dCA8IDEwID8gJzAnICsgdGV4dCA6IHRleHQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMubGlzdC5sZW5ndGggPj0gNDApIHtcclxuICAgICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSwgNTAwKTtcclxuICAgIH0sXHJcbiAgICBvblJlZnJlc2goKSB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIHRoaXMubGlzdCA9IFtdO1xyXG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnJlZnJlc2hpbmcgPSBmYWxzZTtcclxuICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMTApO1xyXG4gICAgICB9LCAxMDAwKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcblxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gcGFnZXMvZGVtby9saXN0LnZ1ZSJdLCJzb3VyY2VSb290IjoiIn0=